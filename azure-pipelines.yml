# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
- master

variables:
  - HOMEBREW_NO_ANALYTICS: 1
  - HOMEBREW_NO_AUTO_UPDATE: 1
  - gco: |
      brew tap osx-cross/avr \
      cd $(brew --repo)/Library/Taps/osx-cross/homebrew-avr \
      git checkout --detach \
      git fetch origin '+refs/heads/*:refs/heads/*' \
      git checkout $(SourceBranchName)
  - bundle_install: |
      gem install bundler \
      bundle install --retry=3 --jobs=4

pool:
  vmImage: 'macOS 10.13'

strategy:
  parallel: 8

jobs:
  - job:
    displayName: AVR Binutils
    variables:
      - package: avr-binutils
    steps:
      - bash: echo $(bundle_install)
      displayName: bundle install

      - bash: echo $(gco)
      displayName: Git checkout $(SourceBranchName)

      - bash: |
          brew audit --strict $(package)
        displayName: Audit $(package)
        timeoutInMinutes: 360

      - bash: |
          brew install $(package)
        displayName: Build $(package)
        timeoutInMinutes: 360
        
      - bash: |
          brew test $(package)
        displayName: Test $(package)
        timeoutInMinutes: 360

  - job:
    displayName: AVR GCC
    variables:
      - package: avr-gcc
    steps:
      - bash: echo $(bundle_install)
      displayName: bundle install
      - bash: echo $(gco)
      displayName: Git checkout $(SourceBranchName)
      - bash: |
          brew audit --strict $(package)
        displayName: Audit $(package)
        timeoutInMinutes: 360
      - bash: |
          brew install $(package)
        displayName: Build $(package)
        timeoutInMinutes: 360
      - bash: |
          brew test $(package)
        displayName: Test $(package)
        timeoutInMinutes: 360
